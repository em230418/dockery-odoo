RELBASE: ./vendor/odoo/cc


# odoo/netsvc.py - [PATCH] [IMP] netsvc: add json logging capa on non tty
https://github.com/xoe-labs/odoo-dev/compare/10.0...xoe-labs:10.0-NOPR-add-json-logging-on-non-tty.patch

From 8eda68816d0679063e2b438abed22c48c2e57f95 Mon Sep 17 00:00:00 2001
From: David Arnold <dar@xoe.solutions>
Date: Mon, 20 Aug 2018 12:41:55 -0500
Subject: [PATCH] [IMP] netsvc: add json logging capa on non tty

This commit introduces json loggin capability if `pythonksonlogger` lib is
present on non tty stderr.

Ths is useful for log aggregation and easier parsing. Especially it handles
multiline logs a lot more gracefully.

Main advantage: removes the need for log buffers and potentially error prone
multiline parsing.

Signed-off-by: "David Arnold" <"dar@xoe.solutions">
---
 odoo/netsvc.py | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/odoo/netsvc.py b/odoo/netsvc.py
index 84e9702479b97..efc5da6d2096f 100644
--- a/odoo/netsvc.py
+++ b/odoo/netsvc.py
@@ -16,6 +16,11 @@
 import sql_db
 import tools

+try:
+    from pythonjsonlogger import jsonlogger
+except ImportError:
+    jsonlogger = None
+
 _logger = logging.getLogger(__name__)

 def log(logger, level, prefix, msg, depth=None):
@@ -107,6 +112,17 @@ def format(self, record):
         record.levelname = COLOR_PATTERN % (30 + fg_color, 40 + bg_color, record.levelname)
         return DBFormatter.format(self, record)

+if jsonlogger:
+    class JSONFormatter(jsonlogger.JsonFormatter):
+        def formatException(self, exc_info):
+            result = super(JSONFormatter, self).formatException(exc_info)
+            # Also provide the error's class & module name in a parseable way
+            return exc_info[0].__module__ + '.' + exc_info[0].__name__ + ' >>>> ' + result
+        def format(self, record):
+            record.pid = os.getpid()
+            record.dbname = getattr(threading.currentThread(), 'dbname', '?')
+            return jsonlogger.JsonFormatter.format(self, record)
+
 _logger_init = False
 def init_logger():
     global _logger_init
@@ -169,6 +185,8 @@ def is_a_tty(stream):

     if os.name == 'posix' and isinstance(handler, logging.StreamHandler) and is_a_tty(handler.stream):
         formatter = ColoredFormatter(format)
+    elif jsonlogger:
+        formatter = JSONFormatter(format)
     else:
         formatter = DBFormatter(format)
     handler.setFormatter(formatter)
